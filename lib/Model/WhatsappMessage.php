<?php
/**
 * WhatsappMessage
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  YCloud\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * YCloud API
 *
 * The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.
 *
 * The version of the OpenAPI document: v2
 * Contact: service@ycloud.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace YCloud\Client\Model;

use \ArrayAccess;
use \YCloud\Client\ObjectSerializer;

/**
 * WhatsappMessage Class Doc Comment
 *
 * @category Class
 * @description WhatsApp outbound message object.
 * @package  YCloud\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class WhatsappMessage implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'WhatsappMessage';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'wamid' => 'string',
        'waba_id' => 'string',
        'from' => 'string',
        'to' => 'string',
        'conversation' => '\YCloud\Client\Model\WhatsappConversation',
        'type' => '\YCloud\Client\Model\WhatsappMessageType',
        'template' => '\YCloud\Client\Model\WhatsappMessageTemplate',
        'text' => '\YCloud\Client\Model\WhatsappMessageText',
        'image' => '\YCloud\Client\Model\WhatsappMessageMedia',
        'video' => '\YCloud\Client\Model\WhatsappMessageMedia',
        'audio' => '\YCloud\Client\Model\WhatsappMessageMedia',
        'document' => '\YCloud\Client\Model\WhatsappMessageMedia',
        'sticker' => '\YCloud\Client\Model\WhatsappMessageMedia',
        'location' => '\YCloud\Client\Model\WhatsappMessageLocation',
        'interactive' => '\YCloud\Client\Model\WhatsappMessageInteractive',
        'contacts' => '\YCloud\Client\Model\WhatsappMessageContact[]',
        'reaction' => '\YCloud\Client\Model\WhatsappMessageReaction',
        'context' => '\YCloud\Client\Model\WhatsappMessageContext',
        'external_id' => 'string',
        'status' => '\YCloud\Client\Model\WhatsappMessageStatus',
        'error_code' => 'string',
        'error_message' => 'string',
        'create_time' => '\DateTime',
        'update_time' => '\DateTime',
        'send_time' => '\DateTime',
        'deliver_time' => '\DateTime',
        'read_time' => '\DateTime',
        'total_price' => 'double',
        'currency' => 'string',
        'region_code' => 'string',
        'pricing_category' => '\YCloud\Client\Model\WhatsappPricingCategory',
        'whatsapp_api_error' => '\YCloud\Client\Model\WhatsappApiError',
        'biz_type' => 'string',
        'verification_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'wamid' => null,
        'waba_id' => null,
        'from' => null,
        'to' => null,
        'conversation' => null,
        'type' => null,
        'template' => null,
        'text' => null,
        'image' => null,
        'video' => null,
        'audio' => null,
        'document' => null,
        'sticker' => null,
        'location' => null,
        'interactive' => null,
        'contacts' => null,
        'reaction' => null,
        'context' => null,
        'external_id' => null,
        'status' => null,
        'error_code' => null,
        'error_message' => null,
        'create_time' => 'date-time',
        'update_time' => 'date-time',
        'send_time' => 'date-time',
        'deliver_time' => 'date-time',
        'read_time' => 'date-time',
        'total_price' => 'double',
        'currency' => null,
        'region_code' => null,
        'pricing_category' => null,
        'whatsapp_api_error' => null,
        'biz_type' => null,
        'verification_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'wamid' => 'wamid',
        'waba_id' => 'wabaId',
        'from' => 'from',
        'to' => 'to',
        'conversation' => 'conversation',
        'type' => 'type',
        'template' => 'template',
        'text' => 'text',
        'image' => 'image',
        'video' => 'video',
        'audio' => 'audio',
        'document' => 'document',
        'sticker' => 'sticker',
        'location' => 'location',
        'interactive' => 'interactive',
        'contacts' => 'contacts',
        'reaction' => 'reaction',
        'context' => 'context',
        'external_id' => 'externalId',
        'status' => 'status',
        'error_code' => 'errorCode',
        'error_message' => 'errorMessage',
        'create_time' => 'createTime',
        'update_time' => 'updateTime',
        'send_time' => 'sendTime',
        'deliver_time' => 'deliverTime',
        'read_time' => 'readTime',
        'total_price' => 'totalPrice',
        'currency' => 'currency',
        'region_code' => 'regionCode',
        'pricing_category' => 'pricingCategory',
        'whatsapp_api_error' => 'whatsappApiError',
        'biz_type' => 'bizType',
        'verification_id' => 'verificationId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'wamid' => 'setWamid',
        'waba_id' => 'setWabaId',
        'from' => 'setFrom',
        'to' => 'setTo',
        'conversation' => 'setConversation',
        'type' => 'setType',
        'template' => 'setTemplate',
        'text' => 'setText',
        'image' => 'setImage',
        'video' => 'setVideo',
        'audio' => 'setAudio',
        'document' => 'setDocument',
        'sticker' => 'setSticker',
        'location' => 'setLocation',
        'interactive' => 'setInteractive',
        'contacts' => 'setContacts',
        'reaction' => 'setReaction',
        'context' => 'setContext',
        'external_id' => 'setExternalId',
        'status' => 'setStatus',
        'error_code' => 'setErrorCode',
        'error_message' => 'setErrorMessage',
        'create_time' => 'setCreateTime',
        'update_time' => 'setUpdateTime',
        'send_time' => 'setSendTime',
        'deliver_time' => 'setDeliverTime',
        'read_time' => 'setReadTime',
        'total_price' => 'setTotalPrice',
        'currency' => 'setCurrency',
        'region_code' => 'setRegionCode',
        'pricing_category' => 'setPricingCategory',
        'whatsapp_api_error' => 'setWhatsappApiError',
        'biz_type' => 'setBizType',
        'verification_id' => 'setVerificationId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'wamid' => 'getWamid',
        'waba_id' => 'getWabaId',
        'from' => 'getFrom',
        'to' => 'getTo',
        'conversation' => 'getConversation',
        'type' => 'getType',
        'template' => 'getTemplate',
        'text' => 'getText',
        'image' => 'getImage',
        'video' => 'getVideo',
        'audio' => 'getAudio',
        'document' => 'getDocument',
        'sticker' => 'getSticker',
        'location' => 'getLocation',
        'interactive' => 'getInteractive',
        'contacts' => 'getContacts',
        'reaction' => 'getReaction',
        'context' => 'getContext',
        'external_id' => 'getExternalId',
        'status' => 'getStatus',
        'error_code' => 'getErrorCode',
        'error_message' => 'getErrorMessage',
        'create_time' => 'getCreateTime',
        'update_time' => 'getUpdateTime',
        'send_time' => 'getSendTime',
        'deliver_time' => 'getDeliverTime',
        'read_time' => 'getReadTime',
        'total_price' => 'getTotalPrice',
        'currency' => 'getCurrency',
        'region_code' => 'getRegionCode',
        'pricing_category' => 'getPricingCategory',
        'whatsapp_api_error' => 'getWhatsappApiError',
        'biz_type' => 'getBizType',
        'verification_id' => 'getVerificationId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['wamid'] = $data['wamid'] ?? null;
        $this->container['waba_id'] = $data['waba_id'] ?? null;
        $this->container['from'] = $data['from'] ?? null;
        $this->container['to'] = $data['to'] ?? null;
        $this->container['conversation'] = $data['conversation'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['template'] = $data['template'] ?? null;
        $this->container['text'] = $data['text'] ?? null;
        $this->container['image'] = $data['image'] ?? null;
        $this->container['video'] = $data['video'] ?? null;
        $this->container['audio'] = $data['audio'] ?? null;
        $this->container['document'] = $data['document'] ?? null;
        $this->container['sticker'] = $data['sticker'] ?? null;
        $this->container['location'] = $data['location'] ?? null;
        $this->container['interactive'] = $data['interactive'] ?? null;
        $this->container['contacts'] = $data['contacts'] ?? null;
        $this->container['reaction'] = $data['reaction'] ?? null;
        $this->container['context'] = $data['context'] ?? null;
        $this->container['external_id'] = $data['external_id'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['error_code'] = $data['error_code'] ?? null;
        $this->container['error_message'] = $data['error_message'] ?? null;
        $this->container['create_time'] = $data['create_time'] ?? null;
        $this->container['update_time'] = $data['update_time'] ?? null;
        $this->container['send_time'] = $data['send_time'] ?? null;
        $this->container['deliver_time'] = $data['deliver_time'] ?? null;
        $this->container['read_time'] = $data['read_time'] ?? null;
        $this->container['total_price'] = $data['total_price'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['region_code'] = $data['region_code'] ?? null;
        $this->container['pricing_category'] = $data['pricing_category'] ?? null;
        $this->container['whatsapp_api_error'] = $data['whatsapp_api_error'] ?? null;
        $this->container['biz_type'] = $data['biz_type'] ?? null;
        $this->container['verification_id'] = $data['verification_id'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['waba_id'] === null) {
            $invalidProperties[] = "'waba_id' can't be null";
        }
        if ($this->container['from'] === null) {
            $invalidProperties[] = "'from' can't be null";
        }
        if ($this->container['to'] === null) {
            $invalidProperties[] = "'to' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id Unique ID of the message.
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets wamid
     *
     * @return string|null
     */
    public function getWamid()
    {
        return $this->container['wamid'];
    }

    /**
     * Sets wamid
     *
     * @param string|null $wamid The original message ID on WhatsApp's platform.
     *
     * @return self
     */
    public function setWamid($wamid)
    {
        $this->container['wamid'] = $wamid;

        return $this;
    }

    /**
     * Gets waba_id
     *
     * @return string
     */
    public function getWabaId()
    {
        return $this->container['waba_id'];
    }

    /**
     * Sets waba_id
     *
     * @param string $waba_id WhatsApp Business Account ID.
     *
     * @return self
     */
    public function setWabaId($waba_id)
    {
        $this->container['waba_id'] = $waba_id;

        return $this;
    }

    /**
     * Gets from
     *
     * @return string
     */
    public function getFrom()
    {
        return $this->container['from'];
    }

    /**
     * Sets from
     *
     * @param string $from The sender's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.
     *
     * @return self
     */
    public function setFrom($from)
    {
        $this->container['from'] = $from;

        return $this;
    }

    /**
     * Gets to
     *
     * @return string
     */
    public function getTo()
    {
        return $this->container['to'];
    }

    /**
     * Sets to
     *
     * @param string $to The recipient's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.
     *
     * @return self
     */
    public function setTo($to)
    {
        $this->container['to'] = $to;

        return $this;
    }

    /**
     * Gets conversation
     *
     * @return \YCloud\Client\Model\WhatsappConversation|null
     */
    public function getConversation()
    {
        return $this->container['conversation'];
    }

    /**
     * Sets conversation
     *
     * @param \YCloud\Client\Model\WhatsappConversation|null $conversation conversation
     *
     * @return self
     */
    public function setConversation($conversation)
    {
        $this->container['conversation'] = $conversation;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \YCloud\Client\Model\WhatsappMessageType|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \YCloud\Client\Model\WhatsappMessageType|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets template
     *
     * @return \YCloud\Client\Model\WhatsappMessageTemplate|null
     */
    public function getTemplate()
    {
        return $this->container['template'];
    }

    /**
     * Sets template
     *
     * @param \YCloud\Client\Model\WhatsappMessageTemplate|null $template template
     *
     * @return self
     */
    public function setTemplate($template)
    {
        $this->container['template'] = $template;

        return $this;
    }

    /**
     * Gets text
     *
     * @return \YCloud\Client\Model\WhatsappMessageText|null
     */
    public function getText()
    {
        return $this->container['text'];
    }

    /**
     * Sets text
     *
     * @param \YCloud\Client\Model\WhatsappMessageText|null $text text
     *
     * @return self
     */
    public function setText($text)
    {
        $this->container['text'] = $text;

        return $this;
    }

    /**
     * Gets image
     *
     * @return \YCloud\Client\Model\WhatsappMessageMedia|null
     */
    public function getImage()
    {
        return $this->container['image'];
    }

    /**
     * Sets image
     *
     * @param \YCloud\Client\Model\WhatsappMessageMedia|null $image image
     *
     * @return self
     */
    public function setImage($image)
    {
        $this->container['image'] = $image;

        return $this;
    }

    /**
     * Gets video
     *
     * @return \YCloud\Client\Model\WhatsappMessageMedia|null
     */
    public function getVideo()
    {
        return $this->container['video'];
    }

    /**
     * Sets video
     *
     * @param \YCloud\Client\Model\WhatsappMessageMedia|null $video video
     *
     * @return self
     */
    public function setVideo($video)
    {
        $this->container['video'] = $video;

        return $this;
    }

    /**
     * Gets audio
     *
     * @return \YCloud\Client\Model\WhatsappMessageMedia|null
     */
    public function getAudio()
    {
        return $this->container['audio'];
    }

    /**
     * Sets audio
     *
     * @param \YCloud\Client\Model\WhatsappMessageMedia|null $audio audio
     *
     * @return self
     */
    public function setAudio($audio)
    {
        $this->container['audio'] = $audio;

        return $this;
    }

    /**
     * Gets document
     *
     * @return \YCloud\Client\Model\WhatsappMessageMedia|null
     */
    public function getDocument()
    {
        return $this->container['document'];
    }

    /**
     * Sets document
     *
     * @param \YCloud\Client\Model\WhatsappMessageMedia|null $document document
     *
     * @return self
     */
    public function setDocument($document)
    {
        $this->container['document'] = $document;

        return $this;
    }

    /**
     * Gets sticker
     *
     * @return \YCloud\Client\Model\WhatsappMessageMedia|null
     */
    public function getSticker()
    {
        return $this->container['sticker'];
    }

    /**
     * Sets sticker
     *
     * @param \YCloud\Client\Model\WhatsappMessageMedia|null $sticker sticker
     *
     * @return self
     */
    public function setSticker($sticker)
    {
        $this->container['sticker'] = $sticker;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \YCloud\Client\Model\WhatsappMessageLocation|null
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \YCloud\Client\Model\WhatsappMessageLocation|null $location location
     *
     * @return self
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets interactive
     *
     * @return \YCloud\Client\Model\WhatsappMessageInteractive|null
     */
    public function getInteractive()
    {
        return $this->container['interactive'];
    }

    /**
     * Sets interactive
     *
     * @param \YCloud\Client\Model\WhatsappMessageInteractive|null $interactive interactive
     *
     * @return self
     */
    public function setInteractive($interactive)
    {
        $this->container['interactive'] = $interactive;

        return $this;
    }

    /**
     * Gets contacts
     *
     * @return \YCloud\Client\Model\WhatsappMessageContact[]|null
     */
    public function getContacts()
    {
        return $this->container['contacts'];
    }

    /**
     * Sets contacts
     *
     * @param \YCloud\Client\Model\WhatsappMessageContact[]|null $contacts contacts
     *
     * @return self
     */
    public function setContacts($contacts)
    {
        $this->container['contacts'] = $contacts;

        return $this;
    }

    /**
     * Gets reaction
     *
     * @return \YCloud\Client\Model\WhatsappMessageReaction|null
     */
    public function getReaction()
    {
        return $this->container['reaction'];
    }

    /**
     * Sets reaction
     *
     * @param \YCloud\Client\Model\WhatsappMessageReaction|null $reaction reaction
     *
     * @return self
     */
    public function setReaction($reaction)
    {
        $this->container['reaction'] = $reaction;

        return $this;
    }

    /**
     * Gets context
     *
     * @return \YCloud\Client\Model\WhatsappMessageContext|null
     */
    public function getContext()
    {
        return $this->container['context'];
    }

    /**
     * Sets context
     *
     * @param \YCloud\Client\Model\WhatsappMessageContext|null $context context
     *
     * @return self
     */
    public function setContext($context)
    {
        $this->container['context'] = $context;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string|null
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string|null $external_id A unique (recommended) string to reference the object. This can be an order number or similar, and can be used to reconcile the object with your internal systems.
     *
     * @return self
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \YCloud\Client\Model\WhatsappMessageStatus|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \YCloud\Client\Model\WhatsappMessageStatus|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets error_code
     *
     * @return string|null
     */
    public function getErrorCode()
    {
        return $this->container['error_code'];
    }

    /**
     * Sets error_code
     *
     * @param string|null $error_code Error code when the message status is `failed`.
     *
     * @return self
     */
    public function setErrorCode($error_code)
    {
        $this->container['error_code'] = $error_code;

        return $this;
    }

    /**
     * Gets error_message
     *
     * @return string|null
     */
    public function getErrorMessage()
    {
        return $this->container['error_message'];
    }

    /**
     * Sets error_message
     *
     * @param string|null $error_message Error message when the message status is `failed`.
     *
     * @return self
     */
    public function setErrorMessage($error_message)
    {
        $this->container['error_message'] = $error_message;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return \DateTime|null
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param \DateTime|null $create_time The time at which this message is created, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
     *
     * @return self
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets update_time
     *
     * @return \DateTime|null
     */
    public function getUpdateTime()
    {
        return $this->container['update_time'];
    }

    /**
     * Sets update_time
     *
     * @param \DateTime|null $update_time The time at which this message is updated, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
     *
     * @return self
     */
    public function setUpdateTime($update_time)
    {
        $this->container['update_time'] = $update_time;

        return $this;
    }

    /**
     * Gets send_time
     *
     * @return \DateTime|null
     */
    public function getSendTime()
    {
        return $this->container['send_time'];
    }

    /**
     * Sets send_time
     *
     * @param \DateTime|null $send_time The time at which this message `status` changed to `sent`, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
     *
     * @return self
     */
    public function setSendTime($send_time)
    {
        $this->container['send_time'] = $send_time;

        return $this;
    }

    /**
     * Gets deliver_time
     *
     * @return \DateTime|null
     */
    public function getDeliverTime()
    {
        return $this->container['deliver_time'];
    }

    /**
     * Sets deliver_time
     *
     * @param \DateTime|null $deliver_time The time at which this message `status` changed to `delivered`, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
     *
     * @return self
     */
    public function setDeliverTime($deliver_time)
    {
        $this->container['deliver_time'] = $deliver_time;

        return $this;
    }

    /**
     * Gets read_time
     *
     * @return \DateTime|null
     */
    public function getReadTime()
    {
        return $this->container['read_time'];
    }

    /**
     * Sets read_time
     *
     * @param \DateTime|null $read_time The time at which this message `status` changed to `read`, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
     *
     * @return self
     */
    public function setReadTime($read_time)
    {
        $this->container['read_time'] = $read_time;

        return $this;
    }

    /**
     * Gets total_price
     *
     * @return double|null
     */
    public function getTotalPrice()
    {
        return $this->container['total_price'];
    }

    /**
     * Sets total_price
     *
     * @param double|null $total_price Total price of this message. **Note: It's only an estimated price when the `status` is `accepted` or `sent`. It becomes the final price after the message is delivered, i.e., the `status` is `delivered` or `read`.**
     *
     * @return self
     */
    public function setTotalPrice($total_price)
    {
        $this->container['total_price'] = $total_price;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string|null $currency Price currency. [ISO 4217 currency code](https://en.wikipedia.org/wiki/ISO_4217).
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets region_code
     *
     * @return string|null
     */
    public function getRegionCode()
    {
        return $this->container['region_code'];
    }

    /**
     * Sets region_code
     *
     * @param string|null $region_code The [region code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the recipient phone number.
     *
     * @return self
     */
    public function setRegionCode($region_code)
    {
        $this->container['region_code'] = $region_code;

        return $this;
    }

    /**
     * Gets pricing_category
     *
     * @return \YCloud\Client\Model\WhatsappPricingCategory|null
     */
    public function getPricingCategory()
    {
        return $this->container['pricing_category'];
    }

    /**
     * Sets pricing_category
     *
     * @param \YCloud\Client\Model\WhatsappPricingCategory|null $pricing_category pricing_category
     *
     * @return self
     */
    public function setPricingCategory($pricing_category)
    {
        $this->container['pricing_category'] = $pricing_category;

        return $this;
    }

    /**
     * Gets whatsapp_api_error
     *
     * @return \YCloud\Client\Model\WhatsappApiError|null
     */
    public function getWhatsappApiError()
    {
        return $this->container['whatsapp_api_error'];
    }

    /**
     * Sets whatsapp_api_error
     *
     * @param \YCloud\Client\Model\WhatsappApiError|null $whatsapp_api_error whatsapp_api_error
     *
     * @return self
     */
    public function setWhatsappApiError($whatsapp_api_error)
    {
        $this->container['whatsapp_api_error'] = $whatsapp_api_error;

        return $this;
    }

    /**
     * Gets biz_type
     *
     * @return string|null
     */
    public function getBizType()
    {
        return $this->container['biz_type'];
    }

    /**
     * Sets biz_type
     *
     * @param string|null $biz_type This can be either empty or one of `whatsapp`, or `verify`. Defaults to `whatsapp`. - `whatsapp`: Indicates that the message is sent via the **WhatsApp** product. - `verify`: Indicates that the message is sent via the **Verify** product.
     *
     * @return self
     */
    public function setBizType($biz_type)
    {
        $this->container['biz_type'] = $biz_type;

        return $this;
    }

    /**
     * Gets verification_id
     *
     * @return string|null
     */
    public function getVerificationId()
    {
        return $this->container['verification_id'];
    }

    /**
     * Sets verification_id
     *
     * @param string|null $verification_id The verification ID. Included only when `bizType` is `verify`.
     *
     * @return self
     */
    public function setVerificationId($verification_id)
    {
        $this->container['verification_id'] = $verification_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


