<?php
/**
 * Event
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  YCloud\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * YCloud API
 *
 * The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.
 *
 * The version of the OpenAPI document: v2
 * Contact: service@ycloud.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace YCloud\Client\Model;

use \ArrayAccess;
use \YCloud\Client\ObjectSerializer;

/**
 * Event Class Doc Comment
 *
 * @category Class
 * @description Represents a webhook event payload. Every event contains certain common properties: &#x60;id&#x60;, &#x60;type&#x60;, &#x60;apiVersion&#x60;, &#x60;createTime&#x60;. Each event may also contain some properties unique to the event. For example, &#x60;sms&#x60; is returned when &#x60;type&#x60; is &#x60;sms.message.updated&#x60;.
 * @package  YCloud\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class Event implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Event';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'type' => '\YCloud\Client\Model\EventType',
        'api_version' => 'string',
        'create_time' => '\DateTime',
        'email_delivery' => '\YCloud\Client\Model\EmailDelivery',
        'sms' => '\YCloud\Client\Model\Sms',
        'sms_inbound' => '\YCloud\Client\Model\SmsInbound',
        'voice' => '\YCloud\Client\Model\Voice',
        'whatsapp_business_account' => '\YCloud\Client\Model\WhatsappBusinessAccount',
        'whatsapp_inbound_message' => '\YCloud\Client\Model\WhatsappInboundMessage',
        'whatsapp_message' => '\YCloud\Client\Model\WhatsappMessage',
        'whatsapp_phone_number' => '\YCloud\Client\Model\WhatsappPhoneNumber',
        'whatsapp_payment' => '\YCloud\Client\Model\WhatsappPayment',
        'whatsapp_template' => '\YCloud\Client\Model\WhatsappTemplate'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'type' => null,
        'api_version' => null,
        'create_time' => 'date-time',
        'email_delivery' => null,
        'sms' => null,
        'sms_inbound' => null,
        'voice' => null,
        'whatsapp_business_account' => null,
        'whatsapp_inbound_message' => null,
        'whatsapp_message' => null,
        'whatsapp_phone_number' => null,
        'whatsapp_payment' => null,
        'whatsapp_template' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'type' => 'type',
        'api_version' => 'apiVersion',
        'create_time' => 'createTime',
        'email_delivery' => 'emailDelivery',
        'sms' => 'sms',
        'sms_inbound' => 'smsInbound',
        'voice' => 'voice',
        'whatsapp_business_account' => 'whatsappBusinessAccount',
        'whatsapp_inbound_message' => 'whatsappInboundMessage',
        'whatsapp_message' => 'whatsappMessage',
        'whatsapp_phone_number' => 'whatsappPhoneNumber',
        'whatsapp_payment' => 'whatsappPayment',
        'whatsapp_template' => 'whatsappTemplate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'type' => 'setType',
        'api_version' => 'setApiVersion',
        'create_time' => 'setCreateTime',
        'email_delivery' => 'setEmailDelivery',
        'sms' => 'setSms',
        'sms_inbound' => 'setSmsInbound',
        'voice' => 'setVoice',
        'whatsapp_business_account' => 'setWhatsappBusinessAccount',
        'whatsapp_inbound_message' => 'setWhatsappInboundMessage',
        'whatsapp_message' => 'setWhatsappMessage',
        'whatsapp_phone_number' => 'setWhatsappPhoneNumber',
        'whatsapp_payment' => 'setWhatsappPayment',
        'whatsapp_template' => 'setWhatsappTemplate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'type' => 'getType',
        'api_version' => 'getApiVersion',
        'create_time' => 'getCreateTime',
        'email_delivery' => 'getEmailDelivery',
        'sms' => 'getSms',
        'sms_inbound' => 'getSmsInbound',
        'voice' => 'getVoice',
        'whatsapp_business_account' => 'getWhatsappBusinessAccount',
        'whatsapp_inbound_message' => 'getWhatsappInboundMessage',
        'whatsapp_message' => 'getWhatsappMessage',
        'whatsapp_phone_number' => 'getWhatsappPhoneNumber',
        'whatsapp_payment' => 'getWhatsappPayment',
        'whatsapp_template' => 'getWhatsappTemplate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['api_version'] = $data['api_version'] ?? null;
        $this->container['create_time'] = $data['create_time'] ?? null;
        $this->container['email_delivery'] = $data['email_delivery'] ?? null;
        $this->container['sms'] = $data['sms'] ?? null;
        $this->container['sms_inbound'] = $data['sms_inbound'] ?? null;
        $this->container['voice'] = $data['voice'] ?? null;
        $this->container['whatsapp_business_account'] = $data['whatsapp_business_account'] ?? null;
        $this->container['whatsapp_inbound_message'] = $data['whatsapp_inbound_message'] ?? null;
        $this->container['whatsapp_message'] = $data['whatsapp_message'] ?? null;
        $this->container['whatsapp_phone_number'] = $data['whatsapp_phone_number'] ?? null;
        $this->container['whatsapp_payment'] = $data['whatsapp_payment'] ?? null;
        $this->container['whatsapp_template'] = $data['whatsapp_template'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ((mb_strlen($this->container['id']) > 128)) {
            $invalidProperties[] = "invalid value for 'id', the character length must be smaller than or equal to 128.";
        }

        if ((mb_strlen($this->container['id']) < 6)) {
            $invalidProperties[] = "invalid value for 'id', the character length must be bigger than or equal to 6.";
        }

        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['api_version'] === null) {
            $invalidProperties[] = "'api_version' can't be null";
        }
        if ($this->container['create_time'] === null) {
            $invalidProperties[] = "'create_time' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id Unique ID for the event.
     *
     * @return self
     */
    public function setId($id)
    {
        if ((mb_strlen($id) > 128)) {
            throw new \InvalidArgumentException('invalid length for $id when calling Event., must be smaller than or equal to 128.');
        }
        if ((mb_strlen($id) < 6)) {
            throw new \InvalidArgumentException('invalid length for $id when calling Event., must be bigger than or equal to 6.');
        }

        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \YCloud\Client\Model\EventType
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \YCloud\Client\Model\EventType $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets api_version
     *
     * @return string
     */
    public function getApiVersion()
    {
        return $this->container['api_version'];
    }

    /**
     * Sets api_version
     *
     * @param string $api_version The API version used to render this event.
     *
     * @return self
     */
    public function setApiVersion($api_version)
    {
        $this->container['api_version'] = $api_version;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return \DateTime
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param \DateTime $create_time The time at which this event was created, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
     *
     * @return self
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets email_delivery
     *
     * @return \YCloud\Client\Model\EmailDelivery|null
     */
    public function getEmailDelivery()
    {
        return $this->container['email_delivery'];
    }

    /**
     * Sets email_delivery
     *
     * @param \YCloud\Client\Model\EmailDelivery|null $email_delivery email_delivery
     *
     * @return self
     */
    public function setEmailDelivery($email_delivery)
    {
        $this->container['email_delivery'] = $email_delivery;

        return $this;
    }

    /**
     * Gets sms
     *
     * @return \YCloud\Client\Model\Sms|null
     */
    public function getSms()
    {
        return $this->container['sms'];
    }

    /**
     * Sets sms
     *
     * @param \YCloud\Client\Model\Sms|null $sms sms
     *
     * @return self
     */
    public function setSms($sms)
    {
        $this->container['sms'] = $sms;

        return $this;
    }

    /**
     * Gets sms_inbound
     *
     * @return \YCloud\Client\Model\SmsInbound|null
     */
    public function getSmsInbound()
    {
        return $this->container['sms_inbound'];
    }

    /**
     * Sets sms_inbound
     *
     * @param \YCloud\Client\Model\SmsInbound|null $sms_inbound sms_inbound
     *
     * @return self
     */
    public function setSmsInbound($sms_inbound)
    {
        $this->container['sms_inbound'] = $sms_inbound;

        return $this;
    }

    /**
     * Gets voice
     *
     * @return \YCloud\Client\Model\Voice|null
     */
    public function getVoice()
    {
        return $this->container['voice'];
    }

    /**
     * Sets voice
     *
     * @param \YCloud\Client\Model\Voice|null $voice voice
     *
     * @return self
     */
    public function setVoice($voice)
    {
        $this->container['voice'] = $voice;

        return $this;
    }

    /**
     * Gets whatsapp_business_account
     *
     * @return \YCloud\Client\Model\WhatsappBusinessAccount|null
     */
    public function getWhatsappBusinessAccount()
    {
        return $this->container['whatsapp_business_account'];
    }

    /**
     * Sets whatsapp_business_account
     *
     * @param \YCloud\Client\Model\WhatsappBusinessAccount|null $whatsapp_business_account whatsapp_business_account
     *
     * @return self
     */
    public function setWhatsappBusinessAccount($whatsapp_business_account)
    {
        $this->container['whatsapp_business_account'] = $whatsapp_business_account;

        return $this;
    }

    /**
     * Gets whatsapp_inbound_message
     *
     * @return \YCloud\Client\Model\WhatsappInboundMessage|null
     */
    public function getWhatsappInboundMessage()
    {
        return $this->container['whatsapp_inbound_message'];
    }

    /**
     * Sets whatsapp_inbound_message
     *
     * @param \YCloud\Client\Model\WhatsappInboundMessage|null $whatsapp_inbound_message whatsapp_inbound_message
     *
     * @return self
     */
    public function setWhatsappInboundMessage($whatsapp_inbound_message)
    {
        $this->container['whatsapp_inbound_message'] = $whatsapp_inbound_message;

        return $this;
    }

    /**
     * Gets whatsapp_message
     *
     * @return \YCloud\Client\Model\WhatsappMessage|null
     */
    public function getWhatsappMessage()
    {
        return $this->container['whatsapp_message'];
    }

    /**
     * Sets whatsapp_message
     *
     * @param \YCloud\Client\Model\WhatsappMessage|null $whatsapp_message whatsapp_message
     *
     * @return self
     */
    public function setWhatsappMessage($whatsapp_message)
    {
        $this->container['whatsapp_message'] = $whatsapp_message;

        return $this;
    }

    /**
     * Gets whatsapp_phone_number
     *
     * @return \YCloud\Client\Model\WhatsappPhoneNumber|null
     */
    public function getWhatsappPhoneNumber()
    {
        return $this->container['whatsapp_phone_number'];
    }

    /**
     * Sets whatsapp_phone_number
     *
     * @param \YCloud\Client\Model\WhatsappPhoneNumber|null $whatsapp_phone_number whatsapp_phone_number
     *
     * @return self
     */
    public function setWhatsappPhoneNumber($whatsapp_phone_number)
    {
        $this->container['whatsapp_phone_number'] = $whatsapp_phone_number;

        return $this;
    }

    /**
     * Gets whatsapp_payment
     *
     * @return \YCloud\Client\Model\WhatsappPayment|null
     */
    public function getWhatsappPayment()
    {
        return $this->container['whatsapp_payment'];
    }

    /**
     * Sets whatsapp_payment
     *
     * @param \YCloud\Client\Model\WhatsappPayment|null $whatsapp_payment whatsapp_payment
     *
     * @return self
     */
    public function setWhatsappPayment($whatsapp_payment)
    {
        $this->container['whatsapp_payment'] = $whatsapp_payment;

        return $this;
    }

    /**
     * Gets whatsapp_template
     *
     * @return \YCloud\Client\Model\WhatsappTemplate|null
     */
    public function getWhatsappTemplate()
    {
        return $this->container['whatsapp_template'];
    }

    /**
     * Sets whatsapp_template
     *
     * @param \YCloud\Client\Model\WhatsappTemplate|null $whatsapp_template whatsapp_template
     *
     * @return self
     */
    public function setWhatsappTemplate($whatsapp_template)
    {
        $this->container['whatsapp_template'] = $whatsapp_template;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


